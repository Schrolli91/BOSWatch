########################
# BOSWatch Config File #
########################

[BOSWatch]
# set loglevel for logfile
#   10 = debug
#   20 = info
#   30 = warning
#   40 = error
#   50 = critical
loglevel = 10

# BOSWatch uses a rotating logfile
# Rotating is at midnight
# You can set the backupCount here
# backupCount = 7 (keeps logfiles for 7 days)
backupCount = 7

# if you want to start BOSWatch as a daemon with rc2.d,
# you have to set the path to rtl_fm and multimon-ng !
# both pathes have to end with an /
#rtl_path = /usr/local/bin/
#multimon_path = /usr/local/bin/

# if you are using many plugins or plugins with a long execution time
# you can execute them in an asynchronous manner
# It must be pointed out that enabling (0|1) this consumes time,
# so don't use it for one rapid plugin
processAlarmAsync = 0

# Using RegEx-filter (0 - off | 1 - on)
# filter-configuration in section [Filters]
useRegExFilter = 0

# for double check save the last n IDs
# it is used in combination with double_ignore_time
# 1 is required if you want to use the double alarm filter
doubleFilter_ignore_entries = 10

# time to ignore same alarm (only ID is checked) (sec)
doubleFilter_ignore_time = 5

# ignore msg is only usefull for POCSAG (0 - off | 1 - on)
# 0: double check ignores the msg-text (only check ID + function)
# 1: if you want to differentiate between with/ without msg
# f.e. if they use quick-alarm (without text, then same RIC with msg)
# you will get more then one alarm anyway if the msg is different (receiving-problems)
doubleFilter_check_msg = 0

# writes the multimon-ng raw data stream into a text file named mm_raw.txt
writeMultimonRaw = 1

[NMAHandler]
# you can use a logging handler for sending logging records to NotifyMyAndroid
# enableHandler (0|1) will enable the NMA handler
enableHandler = 0

# loglevel for NMAHandler (see BOSWatch loglevel description)
loglevel = 50

# logging record will send to APIKey
APIKey =

# you can change the name of the application (default: BOSWatch)
# (f.e. if you use more than one instance of BOSWatch)
appName = BOSWatch


[FMS]
# look-up-table for adding a description
# using description (0 - off | 1 - on)
# descriptions are loaded from csv/fms.csv
idDescribed = 0

# Check for correct CRC-information is provided by multimon-ng
# As this seems to be incorrect in many cases it might be useful to disable this
# (0 - off | 1 - on)
# Better use RegEX to verify the correct data
checkCRC = 0

[ZVEI]
# look-up-table for adding a description
# using description (0 - off | 1 - on)
# descriptions are loaded from csv/zvei.csv
idDescribed = 0

[POC]
# some very simple filters:
# Allow only this RICs (empty: allow all, separator ",")
# f.e.: allow_ric = 1234566,1234567,1234568
allow_ric =

# Deny this RICs (empty: allow all, separator ",")
# f.e.: deny_ric = 1234566,1234567,1234568
deny_ric =

# start and end of an allowed filter range
filter_range_start = 0000000
filter_range_end =   9999999

# look-up-table for adding a description
# using description (0 - off | 1 - on)
# descriptions are loaded from csv/poc.csv
idDescribed = 0

# Static Massages for Subrics.
rica = Feuer
ricb = TH
ricc = AGT
ricd = Unwetter

# RIC for net identification
# Usually sent periodically, separated by comma
netIdent_ric = 0174760, 1398098


[multicastAlarm]
# Configure multicastAlarm if your POCSAG network uses an optimized transmission scheme for alarms with more than one RIC (often found in Swissphone networks).
# In this optimized transmission scheme, a POCSAG telegram with each RIC that needs to be alarmed will be send in a sequence. These telegrams are send without a text message. This sequence is directly followed by a telegram with a specific RIC and the text message that belongs to the sequnece send right before.
# A POCSAG pager (DME) can be configured to start an acoustic alarm if a specific RIC without text has been received. If afterwards the specific RIC with the text message will be received, the pager will show the message in it's display.
# multicastAlarm enables BOSwatch to process the all received RICs joined with the text message.
#
# enable multicastAlarm (0 - off | 1 - on)
multicastAlarm = 0

# time limit for alarms that do not belong to the multicastAlarm sequence in seconds
multicastAlarm_ignore_time = 15

# multicastAlarm delimiter RIC (usually used as a starting point for a alarm sequence) (can be empty)
multicastAlarm_delimiter_ric =

# multicastAlarm RIC that is used to send the text message
multicastAlarm_ric =


[Filters]
# RegEX Filter Configuration
# http://www.regexr.com/ - RegEX Test Tool an Documentation
# No Filter for a Typ/Plugin Combination = all Data pass
# INDIVIDUAL_NAME = TYP;DATAFIELD;PLUGIN;FREQUENZ;REGEX
# TYP				= the Data Typ (FMS|ZVEI|POC)
# DATAFIELD	= the field of the Data Array (see readme.md in plugin folder)
# PLUGIN			= the name of the Plugin to call with this Filter (* for all)
# FREQUENZ		= the Frequenz to use the Filter (for more SDR Sticks (* for all))
# REGEX			= the RegEX

# only ZVEI to all plugins with 25### at 85.5MHz
#testfilter = ZVEI;zvei;*;85500000;25[0-9]{3}

# only POCSAG to MySQL with the text "ALARM:" in the message
#pocTest = POC;msg;MySQL;*;ALARM:


[Plugins]
# turn the plugins on or off (0 - off | 1 - on)
MySQL = 1
httpRequest = 0
eMail = 0
BosMon = 0
firEmergency = 0
jsonSocket = 0
notifyMyAndroid = 0
SMS = 0
Sms77 = 0
FFAgent = 0
Pushover = 0
Telegram = 0
yowsup = 0

# for developing template-module
template = 0


[MySQL]
# MySQL configuration
#default port: 3306
dbserver = localhost
dbport = 3306
dbuser = boswatch
dbpassword = root
database = boswatch

# tables in the database
tableFMS = bos_fms
tableZVEI = bos_zvei
tablePOC = bos_pocsag
tableSIG = bos_signal


[httpRequest]
# example URL http://example.com/remote.php?DESCR=%DESCR%

# you can use the following wildcards in your URL as GET params:
# http://en.wikipedia.org/wiki/Query_string

# %FMS% = FMS Code
# %STATUS% = FMS Status
# %DIR% = Direction of the telegram (0/1)
# %DIRT% = Direction of the telegram (Text-String)
# %TSI% = Tactical Short Information (I-IV)
# %DESCR% = Description from csv-file
# %TIME% = Time (by script)
# %DATE% = Date (by script)
#fms_url = http://www.google.de?code=%FMS%&stat=%STATUS%
fms_url =

# %ZVEI% = ZVEI 5-tone Code
# %DESCR% = Description from csv-file
# %TIME% = Time (by script)
# %DATE% = Date (by script)
#zvei_url = http://www.google.de?zvei=%ZVEI%
zvei_url =

# %RIC% = POCSAG RIC
# %FUNC% = POCSAG function/Subric (1-4)
# %FUNCCHAR% = POCSAG function/Subric as character (a-d)
# %FUNCTEXT% = POCSAG function/Subric static massage definded in POCSAG section
# %MSG% = Message of the POCSAG telegram
# %BITRATE% = Bitrate of the POCSAG telegram
# %DESCR% = Description from csv-file
# %TIME% = Time (by script)
# %DATE% = Date (by script)
#poc_url = http://www.google.de?ric=%RIC%&subric=%FUNC%&msg=%MSG%
poc_url =


[eMail]
# SMTP-Server
smtp_server = localhost
# Port of SMTP-server (default: )
smtp_port =
# use tls for connection (0|1)
tls = 0
# Use this, when SMTP-server has restricted access
user =
password =

# Parameters for Alarm-Msg:
# "to" can be more than one address, comma separated
from = local@localhost
to   = user@irgendwo, user2@woanders

# Priority of the eMail:
# normal|urgent|non-urgent
priority = urgent

# %FMS%     = FMS Code
# %STATUS%  = FMS Status
# %DIR%     = Direction of the telegram (0/1)
# %DIRT%    = Direction of the telegram (Text-String)
# %TSI%     = Tactical Short Information (I-IV)
# %DESCR%   = Description, if description-module is used
# %DATE%    = Date (by script)
# %TIME%    = Time (by script)
# %BR%      = Insert line wrap (only in message)
# %LPAR%    = (
# %RPAR%    = )
fms_subject = FMS: %FMS%
fms_message = %DATE% %TIME%: %FMS%%BR%Status: %STATUS% - Direction: %DIRT% - TSI: %TSI%

# %ZVEI%    = ZVEI 5-tone Code
# %DESCR%   = Description, if description-module is used
# %DATE%    = Date (by script)
# %TIME%    = Time (by script)
# %BR%      = Insert line wrap (only in message)
# %LPAR%    = (
# %RPAR%    = )
zvei_subject = Alarm: %ZVEI%
zvei_message = %DATE% %TIME%: %ZVEI%

# %RIC%      = POCSAG RIC
# %FUNC%     = POCSAG function/Subric (1-4)
# %FUNCCHAR% = POCSAG function/Subric als character (a-d)
# %FUNCTEXT% = POCSAG function/Subric static massage definded in POCSAG section
# %MSG%      = Message of the POCSAG telegram
# %BITRATE%  = Bitrate of the POCSAG telegram
# %DESCR%    = Description, if description-module is used
# %DATE%     = Date (by script)
# %TIME%     = Time (by script)
# %BR%       = Insert line wrap (only in message)
# %LPAR%     = (
# %RPAR%     = )
poc_subject = Alarm: %RIC%%LPAR%%FUNCCHAR%%RPAR%
poc_message = %DATE% %TIME% - %DESCR%: %MSG%


[BosMon]
# IP-address of the server (without http://)
# actually no SSL-support
bosmon_server = 192.168.0.1
bosmon_port = 80

# channel-name of type "Web-Telegramm"
bosmon_channel = channel

# Use this, when BosMon has restricted access
bosmon_user =
bosmon_password =


[firEmergency]
# firEmergency configuration
firserver = localhost
firport = 9001


[jsonSocket]
# Protocol for socket (TCP|UDP)
protocol = UDP
# IP-address of the server (without http://)
server = 192.168.0.1
port = 8888


[notifyMyAndroid]
# APIKey given from notifyMyAndroid
APIKey =

# Priority goes from -2 (lowest) to 2 (highest). The default priority is 0 (normal)
priority = 0

# You can change the name of the application (default: BOSWatch)
# (f.e. if you use more than one instance of BOSWatch)
appName = BOSWatch

# instead of a given APIKey/priority you could import them by a csv-file (0|1)
# APIKey and priority above will be ignored, if you use a csv
# configuration loaded from csv/nma.csv
usecsv = 0


[SMS]
# be aware that you need 'gammu' installed and running
# at least you need an UMTS-stick which is supported by 'gammu'

quantity = 1
# be sensitive to single RIC
ric1 = 1234567

# but you can watch several subrics, comma-separated
subric1 = a, b

# a single cellphone-number
phonenumber1 = 0160321654987

# and the text for the sms
# ! DO NOT USE ANY UMLAUT !
text1 = Rueckruf Leitstelle!


[Sms77]
# SMS77 configuration
# Login Username
user =

# Password or API Key
password =

# Receiver singlenumber or groupname from adressbook
to =

# Sender number or name
from =

# Type of Message (see https://www.sms77.de/funktionen/smstypen and https://www.sms77.de/funktionen/http-api)
type = quality


[FFAgent]
# set live mode (0/1)
live = 0

# send messages as type test (0/1)
test = 1

# path to server certificate file
serverCertFile =

# path to client certificate file (LIVE)
clientCertFile =

# path to client certificate password file (LIVE)
clientCertPass =

# webapi token
webApiToken =

# webapi key
webApiKey =

# access token
accessToken =

# selective Call Code
selectiveCallCode =


[Pushover]
# Pushover API Key
api_key =

# Pushover Userkey or Groupkey to receive message
user_key =

# Title of the message
title = BOSWatch Message

# Adapt Pocsag Subric (a,b,c,d) to Pushover Priorities (see https://pushover.net/api#priority)
SubA = 0
SubB = 2
SubC = 1
SubD = 0

# how often should Pushover re-alert in seconds (emergency-messages)
retry = 30

# when should Pushover stop to re-alert in seconds (emergency-messages)
expire = 90

# use HTML in messages (0/1)
html = 1


[Telegram]
# This is your unique BOT token. You will get it from the BotFather once you have created your BOT.
BOTTokenAPIKey =
# Create a group chat with your BOT and enter the chat ID here.
# The plugin will send messages as your BOT and post everything in this group chat.
BOTChatIDAPIKey =
# The plugin can extract a location from the POCSAG message.
# However, this will be done for the following RIC only (7 digits e.g. 0012345).
RICforLocationAPIKey =
# This is your Google API key.
# Required if you want to create a map based on location information received with the above RIC.
GoogleAPIKey =

[yowsup]
# number or chat-number who whants to become the news
empfaenger =
# WhatsApp-number of that the news comes
sender =
# password from this number
password=

# %FMS%     = FMS Code
# %STATUS%  = FMS Status
# %DIR%     = Direction of the telegram (0/1)
# %DIRT%    = Direction of the telegram (Text-String)
# %TSI%     = Tactical Short Information (I-IV)
# %DESCR%   = Description, if description-module is used
# %DATE%    = Date (by script)
# %TIME%    = Time (by script)
# %LPAR%    = (
# %RPAR%    = )
fms_message = %DATE% %TIME%: %FMS%

# %ZVEI%    = ZVEI 5-tone Code
# %DESCR%   = Description, if description-module is used
# %DATE%    = Date (by script)
# %TIME%    = Time (by script)
# %LPAR%    = (
# %RPAR%    = )
zvei_message = %DATE% %TIME%: %ZVEI%

# %RIC%      = POCSAG RIC
# %FUNC%     = POCSAG function/Subric (1-4)
# %FUNCCHAR% = POCSAG function/Subric als character (a-d)
# %MSG%      = Message of the POCSAG telegram
# %BITRATE%  = Bitrate of the POCSAG telegram
# %DESCR%    = Description, if description-module is used
# %DATE%     = Date (by script)
# %TIME%     = Time (by script)
# %LPAR%     = (
# %RPAR%     = )
poc_message = %MSG%


#####################
##### Not ready yet #
#####################

[template]
test1 = testString
test2 = 123456
